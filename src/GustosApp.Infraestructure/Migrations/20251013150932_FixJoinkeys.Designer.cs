// <auto-generated />
using System;
using GustosApp.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GustosApp.Infraestructure.Migrations
{
    [DbContext(typeof(GustosDbContext))]
    [Migration("20251013150932_FixJoinkeys")]
    partial class FixJoinkeys
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CondicionMedicaTags", b =>
                {
                    b.Property<Guid>("CondicionesMedicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CondicionesMedicasId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("CondicionMedicaTags", (string)null);

                    b.HasData(
                        new
                        {
                            CondicionesMedicasId = new Guid("df0fd0d9-ccbd-4ee0-85ef-cef99221394e"),
                            TagsId = new Guid("57fc04c5-81f4-44c8-8f55-5a833b1e2a3b")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("a90feec1-4e14-4730-ab1a-c8b97e0515f4"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("0fba5975-a2d3-40e7-aad5-f68f4697812a"),
                            TagsId = new Guid("b1ccc4a5-d618-4032-8855-9fdcd4444d94")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("800c6326-7351-4132-8807-d6313cb586c4"),
                            TagsId = new Guid("e4de5bca-1945-42ea-8f4f-737665b37adf")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("0a1b5b30-3940-46f6-8b06-d094f5da9a18"),
                            TagsId = new Guid("93696e0e-6226-47df-9af1-4dee58470fda")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("7cb101c0-3467-4671-9673-ca4f485cd5cf"),
                            TagsId = new Guid("b78455c1-23de-4429-b7e3-f0e902fc735c")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("94c58ba4-fedb-42bc-a121-9b6d65a1af59"),
                            TagsId = new Guid("c45e4daa-4a52-439c-aff7-8075f993cef4")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("c1fbf544-c48b-4f2f-b4a8-476e6193240d"),
                            TagsId = new Guid("fcebd133-af80-4b53-9af3-1e1013a187df")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("1f192bb2-99ac-4725-9f90-0a83fecf0802"),
                            TagsId = new Guid("d25dee01-f656-4e95-901c-adcf5afb9854")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("d9a326ab-f139-4548-bc33-e7a2dfce5fe8"),
                            TagsId = new Guid("4b610fb2-f412-4e94-b145-635e2d942b65")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("b9ce1123-4673-420d-bbcc-e979e9b5a3bf"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("ea28f81d-8dfe-4558-93b6-19537a0d47af"),
                            TagsId = new Guid("35f41fd6-267d-4f75-8268-e9f21424796b")
                        });
                });

            modelBuilder.Entity("CondicionMedicaUsuario", b =>
                {
                    b.Property<Guid>("CondicionesMedicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CondicionesMedicasId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioCondicionesMedicas", (string)null);
                });

            modelBuilder.Entity("GustoTags", b =>
                {
                    b.Property<Guid>("GustosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GustosId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("GustoTags", (string)null);

                    b.HasData(
                        new
                        {
                            GustosId = new Guid("254fe076-1791-43bb-940d-b72fc61f0aac"),
                            TagsId = new Guid("93696e0e-6226-47df-9af1-4dee58470fda")
                        },
                        new
                        {
                            GustosId = new Guid("254fe076-1791-43bb-940d-b72fc61f0aac"),
                            TagsId = new Guid("b78455c1-23de-4429-b7e3-f0e902fc735c")
                        },
                        new
                        {
                            GustosId = new Guid("254fe076-1791-43bb-940d-b72fc61f0aac"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            GustosId = new Guid("3bd6bc23-b7ad-4f5e-bbbb-4dbcf28f4d97"),
                            TagsId = new Guid("3eb25592-620d-4a4c-842b-7b3067bf2275")
                        },
                        new
                        {
                            GustosId = new Guid("3bd6bc23-b7ad-4f5e-bbbb-4dbcf28f4d97"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            GustosId = new Guid("57494608-d0e8-48a5-ac5e-7c07afbb1831"),
                            TagsId = new Guid("c45e4daa-4a52-439c-aff7-8075f993cef4")
                        },
                        new
                        {
                            GustosId = new Guid("57494608-d0e8-48a5-ac5e-7c07afbb1831"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            GustosId = new Guid("80426c4e-c519-4c8f-baf8-3ba207032d78"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            GustosId = new Guid("80426c4e-c519-4c8f-baf8-3ba207032d78"),
                            TagsId = new Guid("4b610fb2-f412-4e94-b145-635e2d942b65")
                        },
                        new
                        {
                            GustosId = new Guid("80426c4e-c519-4c8f-baf8-3ba207032d78"),
                            TagsId = new Guid("c8f41e3d-a411-4b6c-ad16-a93f9c6847a7")
                        },
                        new
                        {
                            GustosId = new Guid("a7044fcb-2311-4cc8-a273-4fbdb112c626"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            GustosId = new Guid("a7044fcb-2311-4cc8-a273-4fbdb112c626"),
                            TagsId = new Guid("e4de5bca-1945-42ea-8f4f-737665b37adf")
                        },
                        new
                        {
                            GustosId = new Guid("758c61bf-cce5-402d-95b3-8c24926cdf7e"),
                            TagsId = new Guid("31e31211-5d09-4782-9b5e-c523e7207bfb")
                        },
                        new
                        {
                            GustosId = new Guid("758c61bf-cce5-402d-95b3-8c24926cdf7e"),
                            TagsId = new Guid("b78455c1-23de-4429-b7e3-f0e902fc735c")
                        },
                        new
                        {
                            GustosId = new Guid("758c61bf-cce5-402d-95b3-8c24926cdf7e"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            GustosId = new Guid("b5b74a56-4cd8-4bab-ac12-a1f15b62f8be"),
                            TagsId = new Guid("93696e0e-6226-47df-9af1-4dee58470fda")
                        },
                        new
                        {
                            GustosId = new Guid("b5b74a56-4cd8-4bab-ac12-a1f15b62f8be"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            GustosId = new Guid("b5b74a56-4cd8-4bab-ac12-a1f15b62f8be"),
                            TagsId = new Guid("e4de5bca-1945-42ea-8f4f-737665b37adf")
                        },
                        new
                        {
                            GustosId = new Guid("7ec6923b-71db-42da-87f0-9916e491ef44"),
                            TagsId = new Guid("93696e0e-6226-47df-9af1-4dee58470fda")
                        },
                        new
                        {
                            GustosId = new Guid("7ec6923b-71db-42da-87f0-9916e491ef44"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            GustosId = new Guid("7ec6923b-71db-42da-87f0-9916e491ef44"),
                            TagsId = new Guid("4b610fb2-f412-4e94-b145-635e2d942b65")
                        },
                        new
                        {
                            GustosId = new Guid("f6b2c395-c742-46a6-a586-821bbe22a0d8"),
                            TagsId = new Guid("3eb25592-620d-4a4c-842b-7b3067bf2275")
                        },
                        new
                        {
                            GustosId = new Guid("f6b2c395-c742-46a6-a586-821bbe22a0d8"),
                            TagsId = new Guid("c45e4daa-4a52-439c-aff7-8075f993cef4")
                        },
                        new
                        {
                            GustosId = new Guid("f6b2c395-c742-46a6-a586-821bbe22a0d8"),
                            TagsId = new Guid("31e31211-5d09-4782-9b5e-c523e7207bfb")
                        },
                        new
                        {
                            GustosId = new Guid("1f31e2d9-0d7f-4a0e-818e-9f7951d67f79"),
                            TagsId = new Guid("b78455c1-23de-4429-b7e3-f0e902fc735c")
                        },
                        new
                        {
                            GustosId = new Guid("1f31e2d9-0d7f-4a0e-818e-9f7951d67f79"),
                            TagsId = new Guid("57fc04c5-81f4-44c8-8f55-5a833b1e2a3b")
                        },
                        new
                        {
                            GustosId = new Guid("aae43d0c-5915-40d0-b407-690ee84a25e6"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            GustosId = new Guid("aae43d0c-5915-40d0-b407-690ee84a25e6"),
                            TagsId = new Guid("93696e0e-6226-47df-9af1-4dee58470fda")
                        },
                        new
                        {
                            GustosId = new Guid("aae43d0c-5915-40d0-b407-690ee84a25e6"),
                            TagsId = new Guid("4b610fb2-f412-4e94-b145-635e2d942b65")
                        },
                        new
                        {
                            GustosId = new Guid("5fdc549f-8311-4f3c-a4c6-9e047e5698ca"),
                            TagsId = new Guid("4b610fb2-f412-4e94-b145-635e2d942b65")
                        },
                        new
                        {
                            GustosId = new Guid("5fdc549f-8311-4f3c-a4c6-9e047e5698ca"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            GustosId = new Guid("e2c9ae68-0846-4211-8a19-7456dea0033f"),
                            TagsId = new Guid("b9e5fd0f-e917-456e-b7fd-4ee80db5998f")
                        },
                        new
                        {
                            GustosId = new Guid("e2c9ae68-0846-4211-8a19-7456dea0033f"),
                            TagsId = new Guid("31e31211-5d09-4782-9b5e-c523e7207bfb")
                        },
                        new
                        {
                            GustosId = new Guid("c5e5e944-810f-44ab-a665-5c5ea434a544"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            GustosId = new Guid("c5e5e944-810f-44ab-a665-5c5ea434a544"),
                            TagsId = new Guid("e4de5bca-1945-42ea-8f4f-737665b37adf")
                        },
                        new
                        {
                            GustosId = new Guid("c5e5e944-810f-44ab-a665-5c5ea434a544"),
                            TagsId = new Guid("b1ccc4a5-d618-4032-8855-9fdcd4444d94")
                        },
                        new
                        {
                            GustosId = new Guid("3f081178-d8e0-4399-8598-b02ff9a9c489"),
                            TagsId = new Guid("31e31211-5d09-4782-9b5e-c523e7207bfb")
                        },
                        new
                        {
                            GustosId = new Guid("1c1c46d0-0d31-4107-b309-b4129f6c60d4"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            GustosId = new Guid("1c1c46d0-0d31-4107-b309-b4129f6c60d4"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            GustosId = new Guid("1c1c46d0-0d31-4107-b309-b4129f6c60d4"),
                            TagsId = new Guid("b1ccc4a5-d618-4032-8855-9fdcd4444d94")
                        },
                        new
                        {
                            GustosId = new Guid("1d6363af-9a2b-4110-a58b-cfa444479ae3"),
                            TagsId = new Guid("31e31211-5d09-4782-9b5e-c523e7207bfb")
                        },
                        new
                        {
                            GustosId = new Guid("1d6363af-9a2b-4110-a58b-cfa444479ae3"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            GustosId = new Guid("505fa8cf-d1bd-4799-804d-2735d691f0db"),
                            TagsId = new Guid("c8f41e3d-a411-4b6c-ad16-a93f9c6847a7")
                        },
                        new
                        {
                            GustosId = new Guid("505fa8cf-d1bd-4799-804d-2735d691f0db"),
                            TagsId = new Guid("d25dee01-f656-4e95-901c-adcf5afb9854")
                        },
                        new
                        {
                            GustosId = new Guid("505fa8cf-d1bd-4799-804d-2735d691f0db"),
                            TagsId = new Guid("57fc04c5-81f4-44c8-8f55-5a833b1e2a3b")
                        },
                        new
                        {
                            GustosId = new Guid("0832bd35-f5db-43c0-8b65-17f372cb2378"),
                            TagsId = new Guid("35f41fd6-267d-4f75-8268-e9f21424796b")
                        },
                        new
                        {
                            GustosId = new Guid("0832bd35-f5db-43c0-8b65-17f372cb2378"),
                            TagsId = new Guid("b78455c1-23de-4429-b7e3-f0e902fc735c")
                        },
                        new
                        {
                            GustosId = new Guid("b96d06d9-7c3a-454c-a167-dab3f1e3ac13"),
                            TagsId = new Guid("bbe9d4dd-2890-4725-860e-2affab9eef19")
                        },
                        new
                        {
                            GustosId = new Guid("9bc3b600-23a5-46e5-8b97-271960b5d18d"),
                            TagsId = new Guid("bbe9d4dd-2890-4725-860e-2affab9eef19")
                        },
                        new
                        {
                            GustosId = new Guid("9bc3b600-23a5-46e5-8b97-271960b5d18d"),
                            TagsId = new Guid("57fc04c5-81f4-44c8-8f55-5a833b1e2a3b")
                        },
                        new
                        {
                            GustosId = new Guid("d24d4abd-7090-46e2-8b2f-2e343c829113"),
                            TagsId = new Guid("57fc04c5-81f4-44c8-8f55-5a833b1e2a3b")
                        },
                        new
                        {
                            GustosId = new Guid("d24d4abd-7090-46e2-8b2f-2e343c829113"),
                            TagsId = new Guid("b1ccc4a5-d618-4032-8855-9fdcd4444d94")
                        },
                        new
                        {
                            GustosId = new Guid("58806a47-bd1b-4925-beec-658cff1a2b05"),
                            TagsId = new Guid("bbe9d4dd-2890-4725-860e-2affab9eef19")
                        },
                        new
                        {
                            GustosId = new Guid("58806a47-bd1b-4925-beec-658cff1a2b05"),
                            TagsId = new Guid("c8f41e3d-a411-4b6c-ad16-a93f9c6847a7")
                        },
                        new
                        {
                            GustosId = new Guid("58806a47-bd1b-4925-beec-658cff1a2b05"),
                            TagsId = new Guid("57fc04c5-81f4-44c8-8f55-5a833b1e2a3b")
                        },
                        new
                        {
                            GustosId = new Guid("f485cf12-4fd7-4cee-a58b-78d5e3fdf5bf"),
                            TagsId = new Guid("3eb25592-620d-4a4c-842b-7b3067bf2275")
                        },
                        new
                        {
                            GustosId = new Guid("f485cf12-4fd7-4cee-a58b-78d5e3fdf5bf"),
                            TagsId = new Guid("31e31211-5d09-4782-9b5e-c523e7207bfb")
                        },
                        new
                        {
                            GustosId = new Guid("56b6d595-a1b7-48fc-9ae0-4cf291e1eb21"),
                            TagsId = new Guid("93696e0e-6226-47df-9af1-4dee58470fda")
                        },
                        new
                        {
                            GustosId = new Guid("56b6d595-a1b7-48fc-9ae0-4cf291e1eb21"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            GustosId = new Guid("03427ae8-a042-4868-9373-8ca80f97c9a4"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            GustosId = new Guid("03427ae8-a042-4868-9373-8ca80f97c9a4"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            GustosId = new Guid("0dee7103-d13b-47cf-886c-b3f0d4cb2e60"),
                            TagsId = new Guid("bbe9d4dd-2890-4725-860e-2affab9eef19")
                        },
                        new
                        {
                            GustosId = new Guid("679c82e9-f149-441a-8f6d-e790fb171323"),
                            TagsId = new Guid("93696e0e-6226-47df-9af1-4dee58470fda")
                        },
                        new
                        {
                            GustosId = new Guid("679c82e9-f149-441a-8f6d-e790fb171323"),
                            TagsId = new Guid("b78455c1-23de-4429-b7e3-f0e902fc735c")
                        },
                        new
                        {
                            GustosId = new Guid("679c82e9-f149-441a-8f6d-e790fb171323"),
                            TagsId = new Guid("c1f31540-1462-422c-b4d1-15a8ac24b6d7")
                        },
                        new
                        {
                            GustosId = new Guid("7102923e-ef0d-4a24-af3c-a18cc0b394eb"),
                            TagsId = new Guid("d25dee01-f656-4e95-901c-adcf5afb9854")
                        },
                        new
                        {
                            GustosId = new Guid("d74ff1ba-437f-458d-94ba-2b28482ad6fd"),
                            TagsId = new Guid("b6027ef8-788c-47e1-85e1-85cebd901747")
                        },
                        new
                        {
                            GustosId = new Guid("0571ba30-490d-4ef4-ae9a-f935da97b3b0"),
                            TagsId = new Guid("b6027ef8-788c-47e1-85e1-85cebd901747")
                        });
                });

            modelBuilder.Entity("GustoUsuario", b =>
                {
                    b.Property<Guid>("GustosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GustosId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioGustos", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.CondicionMedica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CondicionesMedicas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df0fd0d9-ccbd-4ee0-85ef-cef99221394e"),
                            Nombre = "Diabetes"
                        },
                        new
                        {
                            Id = new Guid("a90feec1-4e14-4730-ab1a-c8b97e0515f4"),
                            Nombre = "Hipertensión"
                        },
                        new
                        {
                            Id = new Guid("0fba5975-a2d3-40e7-aad5-f68f4697812a"),
                            Nombre = "Colesterol alto"
                        },
                        new
                        {
                            Id = new Guid("800c6326-7351-4132-8807-d6313cb586c4"),
                            Nombre = "Gastritis"
                        },
                        new
                        {
                            Id = new Guid("0a1b5b30-3940-46f6-8b06-d094f5da9a18"),
                            Nombre = "Enfermedad celíaca"
                        },
                        new
                        {
                            Id = new Guid("7cb101c0-3467-4671-9673-ca4f485cd5cf"),
                            Nombre = "Intolerancia a la lactosa"
                        },
                        new
                        {
                            Id = new Guid("94c58ba4-fedb-42bc-a121-9b6d65a1af59"),
                            Nombre = "Alergia a mariscos"
                        },
                        new
                        {
                            Id = new Guid("c1fbf544-c48b-4f2f-b4a8-476e6193240d"),
                            Nombre = "Alergia a frutos secos"
                        },
                        new
                        {
                            Id = new Guid("1f192bb2-99ac-4725-9f90-0a83fecf0802"),
                            Nombre = "Alergia al huevo"
                        },
                        new
                        {
                            Id = new Guid("d9a326ab-f139-4548-bc33-e7a2dfce5fe8"),
                            Nombre = "Síndrome del intestino irritable"
                        },
                        new
                        {
                            Id = new Guid("b9ce1123-4673-420d-bbcc-e979e9b5a3bf"),
                            Nombre = "Gota"
                        },
                        new
                        {
                            Id = new Guid("ea28f81d-8dfe-4558-93b6-19537a0d47af"),
                            Nombre = "Ansiedad (sensibilidad a cafeína)"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid>("AdministradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoInvitacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpiracionCodigo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.HasIndex("CodigoInvitacion")
                        .IsUnique()
                        .HasFilter("[CodigoInvitacion] IS NOT NULL");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Gusto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gustos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("254fe076-1791-43bb-940d-b72fc61f0aac"),
                            Nombre = "Pizza"
                        },
                        new
                        {
                            Id = new Guid("3bd6bc23-b7ad-4f5e-bbbb-4dbcf28f4d97"),
                            Nombre = "Sushi"
                        },
                        new
                        {
                            Id = new Guid("57494608-d0e8-48a5-ac5e-7c07afbb1831"),
                            Nombre = "Paella"
                        },
                        new
                        {
                            Id = new Guid("80426c4e-c519-4c8f-baf8-3ba207032d78"),
                            Nombre = "Milanesa con papas"
                        },
                        new
                        {
                            Id = new Guid("a7044fcb-2311-4cc8-a273-4fbdb112c626"),
                            Nombre = "Tacos"
                        },
                        new
                        {
                            Id = new Guid("758c61bf-cce5-402d-95b3-8c24926cdf7e"),
                            Nombre = "Ensalada César"
                        },
                        new
                        {
                            Id = new Guid("b5b74a56-4cd8-4bab-ac12-a1f15b62f8be"),
                            Nombre = "Ramen japonés"
                        },
                        new
                        {
                            Id = new Guid("7ec6923b-71db-42da-87f0-9916e491ef44"),
                            Nombre = "Empanadas"
                        },
                        new
                        {
                            Id = new Guid("f6b2c395-c742-46a6-a586-821bbe22a0d8"),
                            Nombre = "Ceviche"
                        },
                        new
                        {
                            Id = new Guid("1f31e2d9-0d7f-4a0e-818e-9f7951d67f79"),
                            Nombre = "Helado"
                        },
                        new
                        {
                            Id = new Guid("aae43d0c-5915-40d0-b407-690ee84a25e6"),
                            Nombre = "Hamburguesa"
                        },
                        new
                        {
                            Id = new Guid("5fdc549f-8311-4f3c-a4c6-9e047e5698ca"),
                            Nombre = "Papas fritas"
                        },
                        new
                        {
                            Id = new Guid("e2c9ae68-0846-4211-8a19-7456dea0033f"),
                            Nombre = "Pollo grillado"
                        },
                        new
                        {
                            Id = new Guid("c5e5e944-810f-44ab-a665-5c5ea434a544"),
                            Nombre = "Kebab"
                        },
                        new
                        {
                            Id = new Guid("3f081178-d8e0-4399-8598-b02ff9a9c489"),
                            Nombre = "Ensalada verde"
                        },
                        new
                        {
                            Id = new Guid("1c1c46d0-0d31-4107-b309-b4129f6c60d4"),
                            Nombre = "Asado"
                        },
                        new
                        {
                            Id = new Guid("1d6363af-9a2b-4110-a58b-cfa444479ae3"),
                            Nombre = "Sopa de verduras"
                        },
                        new
                        {
                            Id = new Guid("505fa8cf-d1bd-4799-804d-2735d691f0db"),
                            Nombre = "Panqueques"
                        },
                        new
                        {
                            Id = new Guid("0832bd35-f5db-43c0-8b65-17f372cb2378"),
                            Nombre = "Café con leche"
                        },
                        new
                        {
                            Id = new Guid("b96d06d9-7c3a-454c-a167-dab3f1e3ac13"),
                            Nombre = "Jugo natural"
                        },
                        new
                        {
                            Id = new Guid("9bc3b600-23a5-46e5-8b97-271960b5d18d"),
                            Nombre = "Smoothie de frutas"
                        },
                        new
                        {
                            Id = new Guid("d24d4abd-7090-46e2-8b2f-2e343c829113"),
                            Nombre = "Chocolate"
                        },
                        new
                        {
                            Id = new Guid("58806a47-bd1b-4925-beec-658cff1a2b05"),
                            Nombre = "Tarta de manzana"
                        },
                        new
                        {
                            Id = new Guid("f485cf12-4fd7-4cee-a58b-78d5e3fdf5bf"),
                            Nombre = "Pescado al horno"
                        },
                        new
                        {
                            Id = new Guid("56b6d595-a1b7-48fc-9ae0-4cf291e1eb21"),
                            Nombre = "Pasta boloñesa"
                        },
                        new
                        {
                            Id = new Guid("03427ae8-a042-4868-9373-8ca80f97c9a4"),
                            Nombre = "Lomo a la pimienta"
                        },
                        new
                        {
                            Id = new Guid("0dee7103-d13b-47cf-886c-b3f0d4cb2e60"),
                            Nombre = "Ensalada de frutas"
                        },
                        new
                        {
                            Id = new Guid("679c82e9-f149-441a-8f6d-e790fb171323"),
                            Nombre = "Sándwich de jamón y queso"
                        },
                        new
                        {
                            Id = new Guid("7102923e-ef0d-4a24-af3c-a18cc0b394eb"),
                            Nombre = "Huevos revueltos"
                        },
                        new
                        {
                            Id = new Guid("d74ff1ba-437f-458d-94ba-2b28482ad6fd"),
                            Nombre = "Cerveza artesanal"
                        },
                        new
                        {
                            Id = new Guid("0571ba30-490d-4ef4-ae9a-f935da97b3b0"),
                            Nombre = "Vino tinto"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.InvitacionGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInvitacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MensajePersonalizado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioInvitadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioInvitadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("UsuarioInvitadoId");

                    b.HasIndex("UsuarioInvitadorId");

                    b.ToTable("InvitacionesGrupos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.MiembroGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsAdministrador")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaUnion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("GrupoId", "UsuarioId")
                        .IsUnique();

                    b.ToTable("MiembrosGrupos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restaurante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActualizadoUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CantidadResenas")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreadoUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EmbeddingVector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorariosJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("NombreNormalizado")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PlaceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropietarioUid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Valoracion")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("WebUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NombreNormalizado")
                        .IsUnique()
                        .HasDatabaseName("UX_Restaurantes_NombreNormalizado");

                    b.HasIndex("PropietarioUid")
                        .IsUnique()
                        .HasDatabaseName("UX_Restaurantes_PropietarioUid");

                    b.ToTable("Restaurantes", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.RestaurantePlato", b =>
                {
                    b.Property<Guid>("RestauranteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Plato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RestauranteId", "Plato");

                    b.ToTable("RestaurantePlatos", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restriccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restricciones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("88ad6a6d-2fce-4713-8e22-b56041c57be1"),
                            Nombre = "Sin gluten"
                        },
                        new
                        {
                            Id = new Guid("d2507a73-8d64-45bc-bed5-3e1981613b70"),
                            Nombre = "Sin lactosa"
                        },
                        new
                        {
                            Id = new Guid("903d1554-2bbc-4e1c-8ba3-dc88f2d60b82"),
                            Nombre = "Sin azúcar"
                        },
                        new
                        {
                            Id = new Guid("63a5147a-84a7-4193-9bcb-40ad10025b6c"),
                            Nombre = "Sin sal"
                        },
                        new
                        {
                            Id = new Guid("9dc4cee3-db39-4af1-980d-dc6c2811b989"),
                            Nombre = "Sin mariscos"
                        },
                        new
                        {
                            Id = new Guid("2ab8ac74-4cc3-476f-9e90-d7c63e012e08"),
                            Nombre = "Sin carne roja"
                        },
                        new
                        {
                            Id = new Guid("abed4fde-7bb6-420c-935f-bc018a81f6a4"),
                            Nombre = "Sin frito"
                        },
                        new
                        {
                            Id = new Guid("e1cd3b11-8559-4364-ab35-513c48a9196e"),
                            Nombre = "Sin picante"
                        },
                        new
                        {
                            Id = new Guid("f24a155c-408f-470f-8064-a8043de937ed"),
                            Nombre = "Sin cafeína"
                        },
                        new
                        {
                            Id = new Guid("731b89a2-8898-4557-94dc-b7ee5f1bcbec"),
                            Nombre = "Sin alcohol"
                        },
                        new
                        {
                            Id = new Guid("5723b940-a18d-4f0f-97f6-480ea7d05b32"),
                            Nombre = "Sin soja"
                        },
                        new
                        {
                            Id = new Guid("cb0209bc-2675-4515-ad0b-5889a660de17"),
                            Nombre = "Sin frutos secos"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.ReviewRestaurante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<Guid>("RestauranteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RestauranteId");

                    b.ToTable("ReviewsRestaurantes");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("93696e0e-6226-47df-9af1-4dee58470fda"),
                            Nombre = "Gluten",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("b78455c1-23de-4429-b7e3-f0e902fc735c"),
                            Nombre = "Lácteo",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("57fc04c5-81f4-44c8-8f55-5a833b1e2a3b"),
                            Nombre = "Azúcar",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96"),
                            Nombre = "Sal",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("c45e4daa-4a52-439c-aff7-8075f993cef4"),
                            Nombre = "Mariscos",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13"),
                            Nombre = "Carne roja",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("b9e5fd0f-e917-456e-b7fd-4ee80db5998f"),
                            Nombre = "Carne blanca",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("31e31211-5d09-4782-9b5e-c523e7207bfb"),
                            Nombre = "Vegetal",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("bbe9d4dd-2890-4725-860e-2affab9eef19"),
                            Nombre = "Fruta",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("4b610fb2-f412-4e94-b145-635e2d942b65"),
                            Nombre = "Frito",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("e4de5bca-1945-42ea-8f4f-737665b37adf"),
                            Nombre = "Picante",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("c1f31540-1462-422c-b4d1-15a8ac24b6d7"),
                            Nombre = "Procesado",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("3eb25592-620d-4a4c-842b-7b3067bf2275"),
                            Nombre = "Pescado",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("b1ccc4a5-d618-4032-8855-9fdcd4444d94"),
                            Nombre = "Grasa",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("35f41fd6-267d-4f75-8268-e9f21424796b"),
                            Nombre = "Cafeína",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("c8f41e3d-a411-4b6c-ad16-a93f9c6847a7"),
                            Nombre = "Harina",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("d25dee01-f656-4e95-901c-adcf5afb9854"),
                            Nombre = "Huevos",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("fcebd133-af80-4b53-9af3-1e1013a187df"),
                            Nombre = "Frutos secos",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("3d21eb50-be8b-4d1b-a88b-65bb2c564499"),
                            Nombre = "Soja",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("b6027ef8-788c-47e1-85e1-85cebd901747"),
                            Nombre = "Alcohol",
                            Tipo = "Nutriente"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirebaseUid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FotoPerfilUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PasoActual")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FirebaseUid")
                        .IsUnique();

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RestriccionTags", b =>
                {
                    b.Property<Guid>("RestriccionesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestriccionesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("RestriccionTags", (string)null);

                    b.HasData(
                        new
                        {
                            RestriccionesId = new Guid("88ad6a6d-2fce-4713-8e22-b56041c57be1"),
                            TagsId = new Guid("93696e0e-6226-47df-9af1-4dee58470fda")
                        },
                        new
                        {
                            RestriccionesId = new Guid("d2507a73-8d64-45bc-bed5-3e1981613b70"),
                            TagsId = new Guid("b78455c1-23de-4429-b7e3-f0e902fc735c")
                        },
                        new
                        {
                            RestriccionesId = new Guid("903d1554-2bbc-4e1c-8ba3-dc88f2d60b82"),
                            TagsId = new Guid("57fc04c5-81f4-44c8-8f55-5a833b1e2a3b")
                        },
                        new
                        {
                            RestriccionesId = new Guid("63a5147a-84a7-4193-9bcb-40ad10025b6c"),
                            TagsId = new Guid("fb386e3b-675c-4086-9fd4-d431c754da96")
                        },
                        new
                        {
                            RestriccionesId = new Guid("9dc4cee3-db39-4af1-980d-dc6c2811b989"),
                            TagsId = new Guid("c45e4daa-4a52-439c-aff7-8075f993cef4")
                        },
                        new
                        {
                            RestriccionesId = new Guid("2ab8ac74-4cc3-476f-9e90-d7c63e012e08"),
                            TagsId = new Guid("11637566-47f1-4d18-9bd7-573fdda77e13")
                        },
                        new
                        {
                            RestriccionesId = new Guid("abed4fde-7bb6-420c-935f-bc018a81f6a4"),
                            TagsId = new Guid("4b610fb2-f412-4e94-b145-635e2d942b65")
                        },
                        new
                        {
                            RestriccionesId = new Guid("e1cd3b11-8559-4364-ab35-513c48a9196e"),
                            TagsId = new Guid("e4de5bca-1945-42ea-8f4f-737665b37adf")
                        },
                        new
                        {
                            RestriccionesId = new Guid("f24a155c-408f-470f-8064-a8043de937ed"),
                            TagsId = new Guid("35f41fd6-267d-4f75-8268-e9f21424796b")
                        },
                        new
                        {
                            RestriccionesId = new Guid("731b89a2-8898-4557-94dc-b7ee5f1bcbec"),
                            TagsId = new Guid("b6027ef8-788c-47e1-85e1-85cebd901747")
                        },
                        new
                        {
                            RestriccionesId = new Guid("5723b940-a18d-4f0f-97f6-480ea7d05b32"),
                            TagsId = new Guid("3d21eb50-be8b-4d1b-a88b-65bb2c564499")
                        },
                        new
                        {
                            RestriccionesId = new Guid("cb0209bc-2675-4515-ad0b-5889a660de17"),
                            TagsId = new Guid("fcebd133-af80-4b53-9af3-1e1013a187df")
                        });
                });

            modelBuilder.Entity("RestriccionUsuario", b =>
                {
                    b.Property<Guid>("RestriccionesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestriccionesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioRestricciones", (string)null);
                });

            modelBuilder.Entity("CondicionMedicaTags", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.CondicionMedica", null)
                        .WithMany()
                        .HasForeignKey("CondicionesMedicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CondicionMedicaUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.CondicionMedica", null)
                        .WithMany()
                        .HasForeignKey("CondicionesMedicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustoTags", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Gusto", null)
                        .WithMany()
                        .HasForeignKey("GustosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustoUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Gusto", null)
                        .WithMany()
                        .HasForeignKey("GustosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Grupo", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Usuario", "Administrador")
                        .WithMany("GruposAdministrados")
                        .HasForeignKey("AdministradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.InvitacionGrupo", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Grupo", "Grupo")
                        .WithMany("Invitaciones")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "UsuarioInvitado")
                        .WithMany("InvitacionesRecibidas")
                        .HasForeignKey("UsuarioInvitadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "UsuarioInvitador")
                        .WithMany("InvitacionesEnviadas")
                        .HasForeignKey("UsuarioInvitadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("UsuarioInvitado");

                    b.Navigation("UsuarioInvitador");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.MiembroGrupo", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Grupo", "Grupo")
                        .WithMany("Miembros")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "Usuario")
                        .WithMany("MiembrosGrupos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.RestaurantePlato", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restaurante", "Restaurante")
                        .WithMany("Platos")
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.ReviewRestaurante", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restaurante", null)
                        .WithMany("Reviews")
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestriccionTags", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restriccion", null)
                        .WithMany()
                        .HasForeignKey("RestriccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestriccionUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restriccion", null)
                        .WithMany()
                        .HasForeignKey("RestriccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Grupo", b =>
                {
                    b.Navigation("Invitaciones");

                    b.Navigation("Miembros");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restaurante", b =>
                {
                    b.Navigation("Platos");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Usuario", b =>
                {
                    b.Navigation("GruposAdministrados");

                    b.Navigation("InvitacionesEnviadas");

                    b.Navigation("InvitacionesRecibidas");

                    b.Navigation("MiembrosGrupos");
                });
#pragma warning restore 612, 618
        }
    }
}
