// <auto-generated />
using System;
using GustosApp.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GustosApp.Infraestructure.Migrations
{
    [DbContext(typeof(GustosDbContext))]
    [Migration("20251013151731_AddSeed")]
    partial class AddSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CondicionMedicaTags", b =>
                {
                    b.Property<Guid>("CondicionesMedicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CondicionesMedicasId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("CondicionMedicaTags", (string)null);

                    b.HasData(
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000002"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000003"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000005"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111115")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111128")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000010"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000012"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111125")
                        });
                });

            modelBuilder.Entity("CondicionMedicaUsuario", b =>
                {
                    b.Property<Guid>("CondicionesMedicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CondicionesMedicasId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioCondicionesMedicas", (string)null);
                });

            modelBuilder.Entity("GustoTags", b =>
                {
                    b.Property<Guid>("GustosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GustosId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("GustoTags", (string)null);

                    b.HasData(
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000002"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111123")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000002"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000003"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111115")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000003"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000005"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000005"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111123")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111115")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000010"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000010"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000012"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000012"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000013"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111117")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000013"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000015"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000016"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000016"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000016"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000017"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000017"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000018"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000018"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000018"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000019"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111125")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000019"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000020"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000021"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000021"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000022"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000022"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000023"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000023"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000023"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000024"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111123")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000024"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000025"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000025"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000026"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000026"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000027"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000028"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000028"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000028"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111122")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000029"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000030"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111130")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000031"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111130")
                        });
                });

            modelBuilder.Entity("GustoUsuario", b =>
                {
                    b.Property<Guid>("GustosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GustosId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioGustos", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.CondicionMedica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CondicionesMedicas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000001"),
                            Nombre = "Diabetes"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000002"),
                            Nombre = "Hipertensión"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000003"),
                            Nombre = "Colesterol alto"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000004"),
                            Nombre = "Gastritis"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000005"),
                            Nombre = "Enfermedad celíaca"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000006"),
                            Nombre = "Intolerancia a la lactosa"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000007"),
                            Nombre = "Alergia a mariscos"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000008"),
                            Nombre = "Alergia a frutos secos"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000009"),
                            Nombre = "Alergia al huevo"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000010"),
                            Nombre = "Síndrome del intestino irritable"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000011"),
                            Nombre = "Gota"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000012"),
                            Nombre = "Ansiedad (sensibilidad a cafeína)"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid>("AdministradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoInvitacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpiracionCodigo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.HasIndex("CodigoInvitacion")
                        .IsUnique()
                        .HasFilter("[CodigoInvitacion] IS NOT NULL");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Gusto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gustos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000001"),
                            Nombre = "Pizza"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000002"),
                            Nombre = "Sushi"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000003"),
                            Nombre = "Paella"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000004"),
                            Nombre = "Milanesa con papas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000005"),
                            Nombre = "Tacos"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000006"),
                            Nombre = "Ensalada César"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000007"),
                            Nombre = "Ramen japonés"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000008"),
                            Nombre = "Empanadas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000009"),
                            Nombre = "Ceviche"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000010"),
                            Nombre = "Helado"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000011"),
                            Nombre = "Hamburguesa"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000012"),
                            Nombre = "Papas fritas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000013"),
                            Nombre = "Pollo grillado"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000014"),
                            Nombre = "Kebab"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000015"),
                            Nombre = "Ensalada verde"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000016"),
                            Nombre = "Asado"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000017"),
                            Nombre = "Sopa de verduras"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000018"),
                            Nombre = "Panqueques"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000019"),
                            Nombre = "Café con leche"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000020"),
                            Nombre = "Jugo natural"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000021"),
                            Nombre = "Smoothie de frutas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000022"),
                            Nombre = "Chocolate"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000023"),
                            Nombre = "Tarta de manzana"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000024"),
                            Nombre = "Pescado al horno"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000025"),
                            Nombre = "Pasta boloñesa"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000026"),
                            Nombre = "Lomo a la pimienta"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000027"),
                            Nombre = "Ensalada de frutas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000028"),
                            Nombre = "Sándwich de jamón y queso"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000029"),
                            Nombre = "Huevos revueltos"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000030"),
                            Nombre = "Cerveza artesanal"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000031"),
                            Nombre = "Vino tinto"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.InvitacionGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInvitacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MensajePersonalizado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioInvitadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioInvitadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("UsuarioInvitadoId");

                    b.HasIndex("UsuarioInvitadorId");

                    b.ToTable("InvitacionesGrupos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.MiembroGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsAdministrador")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaUnion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("GrupoId", "UsuarioId")
                        .IsUnique();

                    b.ToTable("MiembrosGrupos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restaurante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActualizadoUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CantidadResenas")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreadoUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EmbeddingVector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorariosJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("NombreNormalizado")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PlaceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropietarioUid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Valoracion")
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("WebUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NombreNormalizado")
                        .IsUnique()
                        .HasDatabaseName("UX_Restaurantes_NombreNormalizado");

                    b.HasIndex("PropietarioUid")
                        .IsUnique()
                        .HasDatabaseName("UX_Restaurantes_PropietarioUid");

                    b.ToTable("Restaurantes", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.RestaurantePlato", b =>
                {
                    b.Property<Guid>("RestauranteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Plato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RestauranteId", "Plato");

                    b.ToTable("RestaurantePlatos", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restriccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restricciones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000001"),
                            Nombre = "Sin gluten"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000002"),
                            Nombre = "Sin lactosa"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000003"),
                            Nombre = "Sin azúcar"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000004"),
                            Nombre = "Sin sal"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000005"),
                            Nombre = "Sin mariscos"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000006"),
                            Nombre = "Sin carne roja"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000007"),
                            Nombre = "Sin frito"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000008"),
                            Nombre = "Sin picante"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000009"),
                            Nombre = "Sin cafeína"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000010"),
                            Nombre = "Sin alcohol"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000011"),
                            Nombre = "Sin soja"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000012"),
                            Nombre = "Sin frutos secos"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.ReviewRestaurante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<Guid>("RestauranteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RestauranteId");

                    b.ToTable("ReviewsRestaurantes");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Nombre = "Gluten",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111112"),
                            Nombre = "Lácteo",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111113"),
                            Nombre = "Azúcar",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111114"),
                            Nombre = "Sal",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111115"),
                            Nombre = "Mariscos",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111116"),
                            Nombre = "Carne roja",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111117"),
                            Nombre = "Carne blanca",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111118"),
                            Nombre = "Vegetal",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111119"),
                            Nombre = "Fruta",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111120"),
                            Nombre = "Frito",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111121"),
                            Nombre = "Picante",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111122"),
                            Nombre = "Procesado",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111123"),
                            Nombre = "Pescado",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111124"),
                            Nombre = "Grasa",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111125"),
                            Nombre = "Cafeína",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111126"),
                            Nombre = "Harina",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111127"),
                            Nombre = "Huevos",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111128"),
                            Nombre = "Frutos secos",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111129"),
                            Nombre = "Soja",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111130"),
                            Nombre = "Alcohol",
                            Tipo = "Nutriente"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirebaseUid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FotoPerfilUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PasoActual")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FirebaseUid")
                        .IsUnique();

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RestriccionTags", b =>
                {
                    b.Property<Guid>("RestriccionesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestriccionesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("RestriccionTags", (string)null);

                    b.HasData(
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000002"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000003"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000005"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111115")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111125")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000010"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111130")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111129")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000012"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111128")
                        });
                });

            modelBuilder.Entity("RestriccionUsuario", b =>
                {
                    b.Property<Guid>("RestriccionesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestriccionesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioRestricciones", (string)null);
                });

            modelBuilder.Entity("CondicionMedicaTags", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.CondicionMedica", null)
                        .WithMany()
                        .HasForeignKey("CondicionesMedicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CondicionMedicaUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.CondicionMedica", null)
                        .WithMany()
                        .HasForeignKey("CondicionesMedicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustoTags", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Gusto", null)
                        .WithMany()
                        .HasForeignKey("GustosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustoUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Gusto", null)
                        .WithMany()
                        .HasForeignKey("GustosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Grupo", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Usuario", "Administrador")
                        .WithMany("GruposAdministrados")
                        .HasForeignKey("AdministradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.InvitacionGrupo", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Grupo", "Grupo")
                        .WithMany("Invitaciones")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "UsuarioInvitado")
                        .WithMany("InvitacionesRecibidas")
                        .HasForeignKey("UsuarioInvitadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "UsuarioInvitador")
                        .WithMany("InvitacionesEnviadas")
                        .HasForeignKey("UsuarioInvitadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("UsuarioInvitado");

                    b.Navigation("UsuarioInvitador");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.MiembroGrupo", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Grupo", "Grupo")
                        .WithMany("Miembros")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "Usuario")
                        .WithMany("MiembrosGrupos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.RestaurantePlato", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restaurante", "Restaurante")
                        .WithMany("Platos")
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.ReviewRestaurante", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restaurante", null)
                        .WithMany("Reviews")
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestriccionTags", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restriccion", null)
                        .WithMany()
                        .HasForeignKey("RestriccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestriccionUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restriccion", null)
                        .WithMany()
                        .HasForeignKey("RestriccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Grupo", b =>
                {
                    b.Navigation("Invitaciones");

                    b.Navigation("Miembros");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restaurante", b =>
                {
                    b.Navigation("Platos");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Usuario", b =>
                {
                    b.Navigation("GruposAdministrados");

                    b.Navigation("InvitacionesEnviadas");

                    b.Navigation("InvitacionesRecibidas");

                    b.Navigation("MiembrosGrupos");
                });
#pragma warning restore 612, 618
        }
    }
}
