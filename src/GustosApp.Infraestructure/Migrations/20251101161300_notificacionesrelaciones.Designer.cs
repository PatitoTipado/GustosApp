// <auto-generated />
using System;
using GustosApp.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GustosApp.Infraestructure.Migrations
{
    [DbContext(typeof(GustosDbContext))]
    [Migration("20251101161300_notificacionesrelaciones")]
    partial class notificacionesrelaciones
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CondicionMedicaTags", b =>
                {
                    b.Property<Guid>("CondicionesMedicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CondicionesMedicasId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("CondicionMedicaTags", (string)null);

                    b.HasData(
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000002"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000003"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000005"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111115")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111128")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000010"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000012"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111125")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000013"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000013"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111117")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000013"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111123")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111117")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111123")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            CondicionesMedicasId = new Guid("44444444-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        });
                });

            modelBuilder.Entity("CondicionMedicaUsuario", b =>
                {
                    b.Property<Guid>("CondicionesMedicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CondicionesMedicasId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioCondicionesMedicas", (string)null);
                });

            modelBuilder.Entity("GustoRestaurante", b =>
                {
                    b.Property<Guid>("GustosQueSirveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("restaurantesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GustosQueSirveId", "restaurantesId");

                    b.HasIndex("restaurantesId");

                    b.ToTable("RestauranteGustos", (string)null);
                });

            modelBuilder.Entity("GustoTags", b =>
                {
                    b.Property<Guid>("GustosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GustosId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("GustoTags", (string)null);

                    b.HasData(
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000002"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111123")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000002"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000003"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111115")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000003"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000005"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000005"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111123")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111115")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000010"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000010"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000012"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000012"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000013"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111117")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000013"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000014"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000015"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000016"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000016"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000016"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000017"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000017"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000018"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000018"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000018"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000019"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111125")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000019"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000020"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000021"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000021"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000022"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000022"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000023"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000023"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000023"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000024"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111123")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000024"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000025"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000025"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000026"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000026"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000027"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000028"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000028"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000028"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111122")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000029"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000030"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111130")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000031"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111130")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000032"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000032"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000033"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000033"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000034"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000034"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000035"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000035"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000035"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000036"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000036"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000036"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000037"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000037"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000038"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000038"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000038"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000039"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000039"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000039"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000040"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000040"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000040"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000041"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000041"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000041"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000042"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000042"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000042"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000043"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000044"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000044"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000045"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000046"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111127")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000046"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000046"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000047"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000047"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000047"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000048"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000048"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000049"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000049"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000050"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000050"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000050"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000050"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000051"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000052"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000052"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000053"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000053"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000054"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000055"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000055"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000055"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111129")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000056"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000057"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000057"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000058"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000058"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111119")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000059"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000059"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000059"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111129")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000060"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000060"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111124")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000060"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000061"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000061"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000062"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000062"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000063"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111126")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000063"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        },
                        new
                        {
                            GustosId = new Guid("22222222-0001-0001-0001-000000000064"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111118")
                        });
                });

            modelBuilder.Entity("GustoUsuario", b =>
                {
                    b.Property<Guid>("GustosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GustosId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioGustos", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.ChatMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ChatMessages");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.CondicionMedica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CondicionesMedicas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000001"),
                            Nombre = "Diabetes"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000002"),
                            Nombre = "Hipertensión"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000003"),
                            Nombre = "Colesterol alto"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000004"),
                            Nombre = "Gastritis"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000005"),
                            Nombre = "Enfermedad celíaca"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000006"),
                            Nombre = "Intolerancia a la lactosa"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000007"),
                            Nombre = "Alergia a mariscos"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000008"),
                            Nombre = "Alergia a frutos secos"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000009"),
                            Nombre = "Alergia al huevo"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000010"),
                            Nombre = "Síndrome del intestino irritable"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000011"),
                            Nombre = "Gota"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000012"),
                            Nombre = "Ansiedad (sensibilidad a cafeína)"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000013"),
                            Nombre = "Vegetariano"
                        },
                        new
                        {
                            Id = new Guid("44444444-0001-0001-0001-000000000014"),
                            Nombre = "Vegano"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<Guid>("AdministradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoInvitacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpiracionCodigo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.HasIndex("CodigoInvitacion")
                        .IsUnique()
                        .HasFilter("[CodigoInvitacion] IS NOT NULL");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.GrupoGusto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GustoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("GustoId");

                    b.ToTable("GrupoGustos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Gusto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gustos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000001"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/pizza.jpg?alt=media&token=1e4e7fea-31d3-4e04-ae50-1ebe29fd16f2",
                            Nombre = "Pizza"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000002"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/sushi.jpg?alt=media&token=9dfd9b64-8455-4206-a5ec-090c935e86e7",
                            Nombre = "Sushi"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000003"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/paella.jpg?alt=media&token=5cfd79d4-7e92-452e-a7c4-899b374d3ea8",
                            Nombre = "Paella"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000004"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/milanesa-con-papas-fritas.jpg?alt=media&token=d2ca59bc-6360-4378-919a-886b0c0e93e0",
                            Nombre = "Milanesa con papas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000005"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/tacos.jpg?alt=media&token=431ae163-15e9-41d0-8fa6-6f79e9862150",
                            Nombre = "Tacos"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000006"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/ensalada-cesar.jpg?alt=media&token=a6b5eaf0-be77-4716-8b11-18f3774f004f",
                            Nombre = "Ensalada César"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000007"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/ramen.jpg?alt=media&token=886fdc48-3d43-46fd-9911-48b1966da347",
                            Nombre = "Ramen japonés"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000008"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/empanadas.png?alt=media&token=7438d05a-c0be-4da0-aea6-b6ab26f7f621",
                            Nombre = "Empanadas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000009"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/ceviche.jpg?alt=media&token=ad28a0df-4bc0-4aa8-ae02-610526ac1152",
                            Nombre = "Ceviche"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000010"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/helado.jpg?alt=media&token=01be542d-9cc4-47f3-a27f-ae3a1b80d306",
                            Nombre = "Helado"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000011"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/Hamburguesa.jpg?alt=media&token=a0fd669b-ade3-427c-b428-c743338885c8",
                            Nombre = "Hamburguesa"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000012"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/papas-fritas.jpg?alt=media&token=5b18bf54-256e-4b36-adc3-e438fa3d374c",
                            Nombre = "Papas fritas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000013"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/pollo-grill.jpg?alt=media&token=d60229b3-5e8a-4de6-9ed7-4a9622a2f3e1",
                            Nombre = "Pollo grillado"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000014"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/kebab.jpg?alt=media&token=0acd13ee-654c-4748-bbe4-695a06053f75",
                            Nombre = "Kebab"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000015"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/ensalada-verde.jpg?alt=media&token=0bb027c8-de8d-4ac4-99db-ee80fc7d0f1c",
                            Nombre = "Ensalada verde"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000016"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/asado.jpg?alt=media&token=254fbe63-39ba-4529-87bb-556381370c9a",
                            Nombre = "Asado"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000017"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/sopa-verduras.jpg?alt=media&token=9858f540-0cb8-4759-a7d5-a6743144863e",
                            Nombre = "Sopa de verduras"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000018"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/panquques.jpg?alt=media&token=2b203013-cbcf-40f3-b266-d629466cd0b2",
                            Nombre = "Panqueques"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000019"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/cafe-con-leche.jpg?alt=media&token=1f3cde3c-e3b9-4ed0-a690-d7e4d6875447",
                            Nombre = "Café con leche"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000020"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/jugos-naturales.jpg?alt=media&token=b8afeb02-882e-4a3f-8445-14949e5871dd",
                            Nombre = "Jugo natural"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000021"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/Smoothie-frutas.jpg?alt=media&token=17ddc1f6-d60c-40d4-8368-f1f003ddd62b",
                            Nombre = "Smoothie de frutas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000022"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/chocolates.jpg?alt=media&token=5f33a2af-cee7-4768-8b47-dda973dd9c4e",
                            Nombre = "Chocolate"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000023"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/tarta-manzana.jpg?alt=media&token=c34fa589-0c37-44cb-891e-2e8aaebdb215",
                            Nombre = "Tarta de manzana"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000024"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/Pescado-al-horn.png?alt=media&token=953296de-c3be-47a4-826e-31ad29cbae22",
                            Nombre = "Pescado al horno"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000025"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/pasta-bolognesa.jpg?alt=media&token=7893a48f-f693-4a2f-a574-81336f91e62c",
                            Nombre = "Pasta boloñesa"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000026"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/lomo_a_la_pimienta.png?alt=media&token=4d8495a4-181b-4d50-a9c8-e95010bfb100",
                            Nombre = "Lomo a la pimienta"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000027"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/ensalada_frutas.jpg?alt=media&token=a13662fa-2ac4-40cd-b1f0-347634a991e9",
                            Nombre = "Ensalada de frutas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000028"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/sandwich-de-huevo-con-jamon-y-queso.jpg?alt=media&token=8ac9b05d-c316-4a84-a099-9bca4f2d6a9a",
                            Nombre = "Sándwich de jamón y queso"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000029"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/huevos-revueltos-desayuno.jpeg?alt=media&token=0f21b637-b499-427c-bdb0-f0a841a76a9b",
                            Nombre = "Huevos revueltos"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000030"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/tipos-de-cerveza.jpg?alt=media&token=1cfa9e77-b663-421a-b649-d52a1ba751d2",
                            Nombre = "Cerveza artesanal"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000031"),
                            ImagenUrl = "https://firebasestorage.googleapis.com/v0/b/gustosapp-5c3c9.firebasestorage.app/o/vino_artesanal.jpg?alt=media&token=fd22ec00-7739-4776-b488-63e46c2937c5",
                            Nombre = "Vino tinto"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000032"),
                            Nombre = "Ensalada Caprese"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000033"),
                            Nombre = "Tarta de Verduras"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000034"),
                            Nombre = "Omelette de vegetales"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000035"),
                            Nombre = "Pizza Margarita"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000036"),
                            Nombre = "Milanesa de berenjena"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000037"),
                            Nombre = "Ñoquis con salsa de tomate"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000038"),
                            Nombre = "Ravioles de ricota y espinaca"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000039"),
                            Nombre = "Fideos con pesto"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000040"),
                            Nombre = "Panqueques de avena con frutas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000041"),
                            Nombre = "Empanadas de humita"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000042"),
                            Nombre = "Lasaña vegetariana"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000043"),
                            Nombre = "Arroz primavera"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000044"),
                            Nombre = "Polenta con salsa de tomate"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000045"),
                            Nombre = "Sopa de calabaza"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000046"),
                            Nombre = "Tortilla de papas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000047"),
                            Nombre = "Quesadillas de vegetales"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000048"),
                            Nombre = "Bruschettas con tomate y albahaca"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000049"),
                            Nombre = "Pastel de papas vegetariano"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000050"),
                            Nombre = "Pizza cuatro quesos"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000051"),
                            Nombre = "Ensalada de quinoa con vegetales"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000052"),
                            Nombre = "Curry de vegetales con arroz"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000053"),
                            Nombre = "Hamburguesa de lentejas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000054"),
                            Nombre = "Sopa crema de zapallo con leche vegetal"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000055"),
                            Nombre = "Arroz frito con tofu"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000056"),
                            Nombre = "Guiso de lentejas vegano"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000057"),
                            Nombre = "Pan integral con palta y tomate"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000058"),
                            Nombre = "Panqueques de banana sin huevo"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000059"),
                            Nombre = "Wrap de falafel con hummus"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000060"),
                            Nombre = "Brownie vegano(con harina integral y aceite de coco"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000061"),
                            Nombre = "Tarta vegana de calabaza"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000062"),
                            Nombre = "Empanadas veganas"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000063"),
                            Nombre = "Tacos veganos"
                        },
                        new
                        {
                            Id = new Guid("22222222-0001-0001-0001-000000000064"),
                            Nombre = "Fideos de arroz con verduras salteadas"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.InvitacionGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaExpiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInvitacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MensajePersonalizado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NotificacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioInvitadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioInvitadorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.HasIndex("UsuarioInvitadoId");

                    b.HasIndex("UsuarioInvitadorId");

                    b.ToTable("InvitacionesGrupos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.MiembroGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<bool>("EsAdministrador")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaUnion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("GrupoId", "UsuarioId")
                        .IsUnique();

                    b.ToTable("MiembrosGrupos");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Notificacion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("InvitacionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Leida")
                        .HasColumnType("bit");

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("UsuarioDestinoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("InvitacionId")
                        .IsUnique()
                        .HasFilter("[InvitacionId] IS NOT NULL");

                    b.HasIndex("UsuarioDestinoId");

                    b.ToTable("Notificaciones", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restaurante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ActualizadoUtc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CantidadResenas")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime>("CreadoUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("EmbeddingVector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorariosJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagenUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<double>("Latitud")
                        .HasColumnType("float");

                    b.Property<double>("Longitud")
                        .HasColumnType("float");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("NombreNormalizado")
                        .IsRequired()
                        .HasMaxLength(160)
                        .HasColumnType("nvarchar(160)");

                    b.Property<string>("PlaceId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PropietarioUid")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime>("UltimaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Valoracion")
                        .HasPrecision(3, 2)
                        .HasColumnType("decimal(3,2)");

                    b.Property<string>("WebUrl")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("NombreNormalizado")
                        .HasDatabaseName("IX_Restaurantes_NombreNormalizado");

                    b.HasIndex("PlaceId")
                        .IsUnique()
                        .HasDatabaseName("UX_Restaurantes_PlaceId")
                        .HasFilter("[PlaceId] IS NOT NULL AND [PlaceId] <> ''");

                    b.HasIndex("Latitud", "Longitud")
                        .HasDatabaseName("IX_Restaurantes_Latitud_Longitud");

                    b.ToTable("Restaurantes", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.RestauranteEspecialidad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RestauranteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RestauranteId");

                    b.ToTable("RestauranteEspecialidades");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.RestaurantePlato", b =>
                {
                    b.Property<Guid>("RestauranteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Plato")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RestauranteId", "Plato");

                    b.ToTable("RestaurantePlatos", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restriccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restricciones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000001"),
                            Nombre = "Sin gluten"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000002"),
                            Nombre = "Sin lactosa"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000003"),
                            Nombre = "Sin azúcar"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000004"),
                            Nombre = "Sin sal"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000005"),
                            Nombre = "Sin mariscos"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000006"),
                            Nombre = "Sin carne roja"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000007"),
                            Nombre = "Sin frito"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000008"),
                            Nombre = "Sin picante"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000009"),
                            Nombre = "Sin cafeína"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000010"),
                            Nombre = "Sin alcohol"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000011"),
                            Nombre = "Sin soja"
                        },
                        new
                        {
                            Id = new Guid("33333333-0001-0001-0001-000000000012"),
                            Nombre = "Sin frutos secos"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.ReviewRestaurante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<Guid>("RestauranteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RestauranteId");

                    b.ToTable("ReviewsRestaurantes");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.SolicitudAmistad", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DestinatarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaRespuesta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RemitenteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DestinatarioId");

                    b.HasIndex("RemitenteId");

                    b.ToTable("SolicitudesAmistad");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Nombre = "Gluten",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111112"),
                            Nombre = "Lácteo",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111113"),
                            Nombre = "Azúcar",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111114"),
                            Nombre = "Sal",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111115"),
                            Nombre = "Mariscos",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111116"),
                            Nombre = "Carne roja",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111117"),
                            Nombre = "Carne blanca",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111118"),
                            Nombre = "Vegetal",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111119"),
                            Nombre = "Fruta",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111120"),
                            Nombre = "Frito",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111121"),
                            Nombre = "Picante",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111122"),
                            Nombre = "Procesado",
                            Tipo = "Categoria"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111123"),
                            Nombre = "Pescado",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111124"),
                            Nombre = "Grasa",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111125"),
                            Nombre = "Cafeína",
                            Tipo = "Nutriente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111126"),
                            Nombre = "Harina",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111127"),
                            Nombre = "Huevos",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111128"),
                            Nombre = "Frutos secos",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111129"),
                            Nombre = "Soja",
                            Tipo = "Ingrediente"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111130"),
                            Nombre = "Alcohol",
                            Tipo = "Nutriente"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirebaseUid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FotoPerfilUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PasoActual")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FirebaseUid")
                        .IsUnique();

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RestauranteRestriccion", b =>
                {
                    b.Property<Guid>("RestaurantesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RestriccionesQueRespetaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestaurantesId", "RestriccionesQueRespetaId");

                    b.HasIndex("RestriccionesQueRespetaId");

                    b.ToTable("RestauranteRestricciones", (string)null);
                });

            modelBuilder.Entity("RestriccionTags", b =>
                {
                    b.Property<Guid>("RestriccionesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TagsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestriccionesId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("RestriccionTags", (string)null);

                    b.HasData(
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000001"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111111")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000002"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111112")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000003"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111113")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000004"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111114")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000005"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111115")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000006"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111116")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000007"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111120")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000008"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111121")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000009"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111125")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000010"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111130")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000011"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111129")
                        },
                        new
                        {
                            RestriccionesId = new Guid("33333333-0001-0001-0001-000000000012"),
                            TagsId = new Guid("11111111-1111-1111-1111-111111111128")
                        });
                });

            modelBuilder.Entity("RestriccionUsuario", b =>
                {
                    b.Property<Guid>("RestriccionesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestriccionesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioRestricciones", (string)null);
                });

            modelBuilder.Entity("CondicionMedicaTags", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.CondicionMedica", null)
                        .WithMany()
                        .HasForeignKey("CondicionesMedicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CondicionMedicaUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.CondicionMedica", null)
                        .WithMany()
                        .HasForeignKey("CondicionesMedicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustoRestaurante", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Gusto", null)
                        .WithMany()
                        .HasForeignKey("GustosQueSirveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Restaurante", null)
                        .WithMany()
                        .HasForeignKey("restaurantesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustoTags", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Gusto", null)
                        .WithMany()
                        .HasForeignKey("GustosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustoUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Gusto", null)
                        .WithMany()
                        .HasForeignKey("GustosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustosApp.Domain.Model.ChatMessage", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Grupo", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Usuario", "Administrador")
                        .WithMany("GruposAdministrados")
                        .HasForeignKey("AdministradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.GrupoGusto", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Grupo", "Grupo")
                        .WithMany("Gustos")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Gusto", "Gusto")
                        .WithMany("GruposRelacionados")
                        .HasForeignKey("GustoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Gusto");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.InvitacionGrupo", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Grupo", "Grupo")
                        .WithMany("Invitaciones")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "UsuarioInvitado")
                        .WithMany("InvitacionesRecibidas")
                        .HasForeignKey("UsuarioInvitadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "UsuarioInvitador")
                        .WithMany("InvitacionesEnviadas")
                        .HasForeignKey("UsuarioInvitadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("UsuarioInvitado");

                    b.Navigation("UsuarioInvitador");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.MiembroGrupo", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Grupo", "Grupo")
                        .WithMany("Miembros")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "Usuario")
                        .WithMany("MiembrosGrupos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Notificacion", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.InvitacionGrupo", "Invitacion")
                        .WithOne("Notificacion")
                        .HasForeignKey("GustosApp.Domain.Model.Notificacion", "InvitacionId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("GustosApp.Domain.Model.Usuario", "UsuarioDestino")
                        .WithMany("Notificaciones")
                        .HasForeignKey("UsuarioDestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invitacion");

                    b.Navigation("UsuarioDestino");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.RestauranteEspecialidad", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restaurante", "Restaurante")
                        .WithMany()
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.RestaurantePlato", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restaurante", "Restaurante")
                        .WithMany("Platos")
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurante");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.ReviewRestaurante", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restaurante", null)
                        .WithMany("Reviews")
                        .HasForeignKey("RestauranteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustosApp.Domain.Model.SolicitudAmistad", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Usuario", "Destinatario")
                        .WithMany()
                        .HasForeignKey("DestinatarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", "Remitente")
                        .WithMany()
                        .HasForeignKey("RemitenteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Destinatario");

                    b.Navigation("Remitente");
                });

            modelBuilder.Entity("RestauranteRestriccion", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restaurante", null)
                        .WithMany()
                        .HasForeignKey("RestaurantesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Restriccion", null)
                        .WithMany()
                        .HasForeignKey("RestriccionesQueRespetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestriccionTags", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restriccion", null)
                        .WithMany()
                        .HasForeignKey("RestriccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestriccionUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restriccion", null)
                        .WithMany()
                        .HasForeignKey("RestriccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Grupo", b =>
                {
                    b.Navigation("Gustos");

                    b.Navigation("Invitaciones");

                    b.Navigation("Miembros");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Gusto", b =>
                {
                    b.Navigation("GruposRelacionados");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.InvitacionGrupo", b =>
                {
                    b.Navigation("Notificacion");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restaurante", b =>
                {
                    b.Navigation("Platos");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Usuario", b =>
                {
                    b.Navigation("GruposAdministrados");

                    b.Navigation("InvitacionesEnviadas");

                    b.Navigation("InvitacionesRecibidas");

                    b.Navigation("MiembrosGrupos");

                    b.Navigation("Notificaciones");
                });
#pragma warning restore 612, 618
        }
    }
}
