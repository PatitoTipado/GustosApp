// <auto-generated />
using System;
using GustosApp.Infraestructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GustosApp.Infraestructure.Migrations
{
    [DbContext(typeof(GustosDbContext))]
    partial class GustosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CondicionMedicaUsuario", b =>
                {
                    b.Property<Guid>("CondicionesMedicasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CondicionesMedicasId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioCondicionesMedicas", (string)null);
                });

            modelBuilder.Entity("GustoUsuario", b =>
                {
                    b.Property<Guid>("GustosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GustosId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioGustos", (string)null);
                });

            modelBuilder.Entity("GustosApp.Domain.Model.CondicionMedica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CondicionesMedicas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333331"),
                            Nombre = "Diabetes"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333332"),
                            Nombre = "Hipertensión"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333333"),
                            Nombre = "Obesidad"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333334"),
                            Nombre = "Gastritis"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333335"),
                            Nombre = "Hígado graso"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333336"),
                            Nombre = "Anemia"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333337"),
                            Nombre = "Síndrome del intestino irritable"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333338"),
                            Nombre = "Insuficiencia renal"
                        },
                        new
                        {
                            Id = new Guid("33333333-3333-3333-3333-333333333339"),
                            Nombre = "Colesterol alto"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Gusto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImagenUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gustos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111111"),
                            Nombre = "Pizza"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111112"),
                            Nombre = "Sushi"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111113"),
                            Nombre = "Pastas"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111114"),
                            Nombre = "Milanesa con papas fritas"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111115"),
                            Nombre = "Empanadas"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111116"),
                            Nombre = "Paella"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111117"),
                            Nombre = "Tacos"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111118"),
                            Nombre = "Choripán"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111119"),
                            Nombre = "Risotto"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111120"),
                            Nombre = "Guiso de lentejas"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111121"),
                            Nombre = "Pizza napolitana"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111122"),
                            Nombre = "Ñoquis"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111123"),
                            Nombre = "Ravioles"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111124"),
                            Nombre = "Ensalada César"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111125"),
                            Nombre = "Ramen japonés"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111126"),
                            Nombre = "Tarta de jamón y queso"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111127"),
                            Nombre = "Ceviche peruano"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111128"),
                            Nombre = "Ensaladas"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111129"),
                            Nombre = "Pollo frito"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111130"),
                            Nombre = "Papas fritas"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111131"),
                            Nombre = "Kebab"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111132"),
                            Nombre = "Flan"
                        },
                        new
                        {
                            Id = new Guid("11111111-1111-1111-1111-111111111133"),
                            Nombre = "Helado"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Restriccion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Restricciones");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222221"),
                            Nombre = "Lactosa"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222222"),
                            Nombre = "Fructosa"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222223"),
                            Nombre = "Gluten no celíaco"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222224"),
                            Nombre = "Cafeína"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222225"),
                            Nombre = "Maní"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222226"),
                            Nombre = "Pescado"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222227"),
                            Nombre = "Chocolate"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222228"),
                            Nombre = "Gluten"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222229"),
                            Nombre = "Mariscos"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222230"),
                            Nombre = "Frutos secos"
                        },
                        new
                        {
                            Id = new Guid("22222222-2222-2222-2222-222222222231"),
                            Nombre = "Mostaza"
                        });
                });

            modelBuilder.Entity("GustosApp.Domain.Model.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirebaseUid")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FotoPerfilUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("FirebaseUid")
                        .IsUnique();

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("RestriccionUsuario", b =>
                {
                    b.Property<Guid>("RestriccionesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuariosId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RestriccionesId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("UsuarioRestricciones", (string)null);
                });

            modelBuilder.Entity("CondicionMedicaUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.CondicionMedica", null)
                        .WithMany()
                        .HasForeignKey("CondicionesMedicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GustoUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Gusto", null)
                        .WithMany()
                        .HasForeignKey("GustosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RestriccionUsuario", b =>
                {
                    b.HasOne("GustosApp.Domain.Model.Restriccion", null)
                        .WithMany()
                        .HasForeignKey("RestriccionesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GustosApp.Domain.Model.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
